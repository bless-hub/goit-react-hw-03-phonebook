{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactList/ContactItem.js","components/ContactList/ContacrList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js","components/Container/container.module.css"],"names":["module","exports","Container","title","children","className","style","section","mainHead","ContactItem","name","number","removeContact","id","key","item","type","button","onClick","ContactList","contacts","list","map","ContactForm","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","addContact","reset","this","form","onSubmit","label","input","onChange","Component","Filter","onChangeFilter","App","filter","changeFilter","contact","uuid","prevState","some","toLowerCase","alert","getFilter","includes","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleFilter","length","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.dafc5832.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__4TKJi\",\"label\":\"ContactForm_label__11E6j\",\"input\":\"ContactForm_input__aPlld\",\"button\":\"ContactForm_button__1A4z5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__b_wYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1A3q5\",\"item\":\"ContactList_item__2NSvy\",\"button\":\"ContactList_button__3sC6m\"};","import React from \"react\";\r\nimport style from \"./container.module.css\";\r\n\r\nexport default function Container({ title, children }) {\r\n  return (\r\n    <section className={style.section}>\r\n      <h2 className={style.mainHead}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.css\";\r\n\r\nexport default function ContactItem({ name, number, removeContact, id }) {\r\n  return (\r\n    <li key={id} className={style.item}>\r\n      <p>{name} </p> : <p>{number}</p>\r\n      <button\r\n        type=\"button\"\r\n        className={style.button}\r\n        onClick={() => removeContact(id)}\r\n      >\r\n        Delete Contact\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.css\";\r\nimport ContactItem from \"./ContactItem\";\r\n\r\nconst ContactList = ({ contacts, removeContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactItem\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        removeContact={removeContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  removeContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  //   handleContact = (e) => {\r\n  //     this.setState({ name: e.target.value });\r\n  //   };\r\n\r\n  //   handleNumber = (e) => {\r\n  //     this.setState({ number: e.target.value });\r\n  //   };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={style.form} onSubmit={this.handleSubmit}>\r\n        <label className={style.label}>\r\n          Name\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={style.label}>\r\n          Number\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={style.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport style from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h4> Find contacts by name</h4>\r\n      <input\r\n        className={style.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Container from \"./components/Container/Container\";\nimport ContactList from \"./components/ContactList/ContacrList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport { v4 as uuid } from \"uuid\";\nimport Filter from \"./components/Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    this.setState((prevState) => {\n      return {\n        contacts: [contact, ...prevState.contacts],\n      };\n    });\n\n    const sameContact = contacts.some(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (sameContact) {\n      alert(`${name} is already in contact.`);\n      return;\n    }\n  };\n\n  getFilter = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const visibleFilter = this.getFilter();\n\n    return (\n      <>\n        <Container title=\"PhoneBook\">\n          <ContactForm addContact={this.addContact} />\n        </Container>\n        <Container title=\"Contacts\">\n          {visibleFilter.length > 0 && (\n            <Filter\n              title=\"Find\"\n              value={filter}\n              onChangeFilter={this.changeFilter}\n            />\n          )}\n          {contacts.length > 0 && (\n            <ContactList\n              contacts={visibleFilter}\n              removeContact={this.removeContact}\n            />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"container_section__3j3ME\",\"mainHead\":\"container_mainHead__1zMmk\"};"],"sourceRoot":""}